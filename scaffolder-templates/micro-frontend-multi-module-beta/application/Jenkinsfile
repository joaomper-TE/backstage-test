pipeline {
    agent {
        kubernetes {
          label currentBuild.fullProjectName.replace('/', '-').toLowerCase()
          defaultContainer 'microfrontend-builder'
          idleMinutes 10
          yamlFile 'build-pod.yaml'
        }
    }

    environment {
        COMMON_FLAGS = "--info --scan"
        PROD_FLAGS   = "${COMMON_FLAGS} -Pminify=true -PstaticBaseUrl=https://static.thousandeyes.com --no-build-cache"
    }

    stages {
        //
        // build on PR
        //
        stage('PR') {
            when { changeRequest() }
            steps {
                withGradle {
                    sh './gradlew ${COMMON_FLAGS} clean check'
                }
            }
            post {
                always {
                    dir('backend') {
                        // fix for https://issues.jenkins-ci.org/browse/JENKINS-6268
                        sh 'find . -name "TEST-*.xml" -exec touch {} \\;'
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'

                        // collect unit test results
                        junit '**/build/test-results/**/*.xml'
                    }
                    dir('frontend') {
                        /* fix for https://issues.jenkins-ci.org/browse/JENKINS-6268  */
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'
                        junit '**/build/js-test-results/test-results.xml'
                    }
                }
            }
        }

        //
        // build on push to primary OR tag
        //
        stage('Primary') {
            when { 
                anyOf {
                    expression { env.BRANCH_IS_PRIMARY }
                }
            }
            steps {
                withGradle {
                    sh './gradlew ${COMMON_FLAGS} check publish'
                }
            }
            post {
                always {
                    dir('backend') {
                        // fix for https://issues.jenkins-ci.org/browse/JENKINS-6268
                        sh 'find . -name "TEST-*.xml" -exec touch {} \\;'
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'

                        // collect unit test results
                        junit '**/build/test-results/**/*.xml'
                    }
                    dir('frontend') {
                        /* fix for https://issues.jenkins-ci.org/browse/JENKINS-6268  */
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'
                        junit '**/build/js-test-results/test-results.xml'
                    }
                }
            }
        }

        stage('Tag') {
            when {
                tag pattern: '^[0-9]\\d?\\.[0-9]\\d?\\.[0-9]\\d?(-RC\\.\\d+)?$', comparator: 'REGEXP'
            }
            steps {
                echo '### building tag: ${TAG_NAME}'
                sh 'git describe --all'
                withGradle {
                    sh './gradlew ${PROD_FLAGS} clean release'
                }
            }
            post {
                always {
                    dir('backend') {
                        // fix for https://issues.jenkins-ci.org/browse/JENKINS-6268
                        sh 'find . -name "TEST-*.xml" -exec touch {} \\;'
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'

                        // collect unit test results
                        junit '**/build/test-results/**/*.xml'
                    }
                    dir('frontend') {
                        /* fix for https://issues.jenkins-ci.org/browse/JENKINS-6268  */
                        sh 'find . -name "test-results.xml" -exec touch {} \\;'
                        junit '**/build/js-test-results/test-results.xml'
                    }
                }
            }
        }
    }

    options {
        timeout(time: 60, unit: 'MINUTES')
        disableConcurrentBuilds()
    }
}
