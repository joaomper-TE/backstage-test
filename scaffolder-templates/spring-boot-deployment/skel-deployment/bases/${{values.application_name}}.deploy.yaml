apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ values.application_name }}
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/name: ${{ values.application_name }}
    app.kubernetes.io/part-of: ${{ values.application_name }}
    app: ${{ values.application_name }}
    product: ${{ values.monitoring_id }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/name: ${{ values.application_name }}
      app.kubernetes.io/part-of: ${{ values.application_name }}
      app: ${{ values.application_name }}
  replicas: 0
  template:
    metadata:
      name: ${{ values.application_name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "9090"
      labels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/name: ${{ values.application_name }}
        app.kubernetes.io/part-of: ${{ values.application_name }}
        app: ${{ values.application_name }}
        product: ${{ values.monitoring_id }}
    spec:
      containers:
      - name: application
        image: ${{ values.image_name }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9090
          initialDelaySeconds: 120
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /actuator/health/readiness
            port: 9090
          initialDelaySeconds: 1
          periodSeconds: 5
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: actuator
          containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 500Mi
      restartPolicy: Always
